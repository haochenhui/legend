server:
  port: 8762
#---
##高可用服务注册中心:由三个节点构成,彼此两两注册实现集群中节点完全对等的效果,任何一个故障都不影响服务的注册与发现.
##需注意:hostname一定要和serviceUrl中保持一致,要么全是ip地址,要么全是主机名<需要附加配置dns,/etc/hosts文件>,
##com.netflix.eureka.util.StatusUtil.isReplicaAvailable is comparing the values of serviceUrl param with
##the hostName in the registry.
#spring:
#  profiles: discovery1
#eureka:
#  instance:
#    hostname: 192.168.244.128
#  server:
#    # 每隔5秒钟响应给客户端的实例列表就过期了，下次响应的时候要重新取
#    response-cache-update-interval-ms: 60000
#    # 每隔5秒钟就把注册状态为DOWN的实例清除掉，设置为0时这个线程就不工作了
#    eviction-interval-timer-in-ms: 60000
#    enableSelfPreservation: false
#  client:
#    serviceUrl:
#      defaultZone:  http://192.168.244.129:8761/eureka/,http://192.168.244.130:8761/eureka/
#---
#spring:
#  profiles: discovery2
#eureka:
#  instance:
#    hostname: 192.168.244.129
#  server:
#    response-cache-update-interval-ms: 5000
#    eviction-interval-timer-in-ms: 5000
#    enableSelfPreservation: false
#  client:
#    serviceUrl:
#      defaultZone: http://192.168.244.128:8761/eureka/,http://192.168.244.130:8761/eureka/
#---
#spring:
#  profiles: discovery3
#eureka:
#  instance:
#    hostname: 192.168.244.130
#  server:
#    response-cache-update-interval-ms: 5000
#    eviction-interval-timer-in-ms: 5000
#    enableSelfPreservation: false
#  client:
#    serviceUrl:
#      defaultZone: http://192.168.244.128:8761/eureka/,http://192.168.244.129:8761/eureka/
##单节点模式
#---
spring:
#  profiles: single
  application:
    name: my-discovery
eureka:
  instance:
    hostname: localhost
  client:
    register-with-eureka: false
    fetch-registry: false
    serviceUrl:
      defaultZone: http://${eureka.instance.hostname}:${server.port}/eureka/
  server:
    response-cache-update-interval-ms: 5000
    eviction-interval-timer-in-ms: 5000
    enableSelfPreservation: false


